// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/cost_graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/framework/cost_graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
class CostGraphDef_Node_InputInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CostGraphDef_Node_InputInfo> {
} _CostGraphDef_Node_InputInfo_default_instance_;
class CostGraphDef_Node_OutputInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CostGraphDef_Node_OutputInfo> {
} _CostGraphDef_Node_OutputInfo_default_instance_;
class CostGraphDef_NodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CostGraphDef_Node> {
} _CostGraphDef_Node_default_instance_;
class CostGraphDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CostGraphDef> {
} _CostGraphDef_default_instance_;

namespace protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_InputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_InputInfo, preceding_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_InputInfo, preceding_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_OutputInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_OutputInfo, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_OutputInfo, alias_input_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_OutputInfo, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node_OutputInfo, dtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, input_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, output_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, temporary_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, host_temp_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, device_temp_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, host_persistent_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, device_persistent_memory_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, compute_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, compute_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, memory_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, is_final_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef_Node, control_input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CostGraphDef, node_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CostGraphDef_Node_InputInfo)},
  { 6, -1, sizeof(CostGraphDef_Node_OutputInfo)},
  { 14, -1, sizeof(CostGraphDef_Node)},
  { 33, -1, sizeof(CostGraphDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CostGraphDef_Node_InputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CostGraphDef_Node_OutputInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CostGraphDef_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CostGraphDef_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/framework/cost_graph.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

GOOGLE_ATTRIBUTE_NOINLINE void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _CostGraphDef_Node_InputInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CostGraphDef_Node_OutputInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CostGraphDef_Node_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CostGraphDef_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::InitDefaults();
  _CostGraphDef_Node_InputInfo_default_instance_.DefaultConstruct();
  _CostGraphDef_Node_OutputInfo_default_instance_.DefaultConstruct();
  _CostGraphDef_Node_default_instance_.DefaultConstruct();
  _CostGraphDef_default_instance_.DefaultConstruct();
  _CostGraphDef_Node_OutputInfo_default_instance_.get_mutable()->shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}

GOOGLE_ATTRIBUTE_NOINLINE void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n*tensorflow/core/framework/cost_graph.p"
      "roto\022\ntensorflow\032,tensorflow/core/framew"
      "ork/tensor_shape.proto\032%tensorflow/core/"
      "framework/types.proto\"\305\005\n\014CostGraphDef\022+"
      "\n\004node\030\001 \003(\0132\035.tensorflow.CostGraphDef.N"
      "ode\032\207\005\n\004Node\022\014\n\004name\030\001 \001(\t\022\016\n\006device\030\002 \001"
      "(\t\022\n\n\002id\030\003 \001(\005\022;\n\ninput_info\030\004 \003(\0132\'.ten"
      "sorflow.CostGraphDef.Node.InputInfo\022=\n\013o"
      "utput_info\030\005 \003(\0132(.tensorflow.CostGraphD"
      "ef.Node.OutputInfo\022\035\n\025temporary_memory_s"
      "ize\030\006 \001(\003\022\035\n\025host_temp_memory_size\030\n \001(\003"
      "\022\037\n\027device_temp_memory_size\030\013 \001(\003\022#\n\033hos"
      "t_persistent_memory_size\030\014 \001(\003\022%\n\035device"
      "_persistent_memory_size\030\020 \001(\003\022\024\n\014compute"
      "_cost\030\t \001(\003\022\024\n\014compute_time\030\016 \001(\003\022\023\n\013mem"
      "ory_time\030\017 \001(\003\022\020\n\010is_final\030\007 \001(\010\022\025\n\rcont"
      "rol_input\030\010 \003(\005\032;\n\tInputInfo\022\026\n\016precedin"
      "g_node\030\001 \001(\005\022\026\n\016preceding_port\030\002 \001(\005\032\206\001\n"
      "\nOutputInfo\022\014\n\004size\030\001 \001(\003\022\030\n\020alias_input"
      "_port\030\002 \001(\003\022+\n\005shape\030\003 \001(\0132\034.tensorflow."
      "TensorShapeProto\022#\n\005dtype\030\004 \001(\0162\024.tensor"
      "flow.DataTypeB0\n\030org.tensorflow.framewor"
      "kB\017CostGraphProtosP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/framework/cost_graph.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

GOOGLE_ATTRIBUTE_NOINLINE void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostGraphDef_Node_InputInfo::kPrecedingNodeFieldNumber;
const int CostGraphDef_Node_InputInfo::kPrecedingPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostGraphDef_Node_InputInfo::CostGraphDef_Node_InputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CostGraphDef.Node.InputInfo)
}
CostGraphDef_Node_InputInfo::CostGraphDef_Node_InputInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CostGraphDef.Node.InputInfo)
}
CostGraphDef_Node_InputInfo::CostGraphDef_Node_InputInfo(const CostGraphDef_Node_InputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&preceding_node_, &from.preceding_node_,
    reinterpret_cast<char*>(&preceding_port_) -
    reinterpret_cast<char*>(&preceding_node_) + sizeof(preceding_port_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CostGraphDef.Node.InputInfo)
}

void CostGraphDef_Node_InputInfo::SharedCtor() {
  ::memset(&preceding_node_, 0, reinterpret_cast<char*>(&preceding_port_) -
    reinterpret_cast<char*>(&preceding_node_) + sizeof(preceding_port_));
  _cached_size_ = 0;
}

CostGraphDef_Node_InputInfo::~CostGraphDef_Node_InputInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.CostGraphDef.Node.InputInfo)
  SharedDtor();
}

void CostGraphDef_Node_InputInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void CostGraphDef_Node_InputInfo::ArenaDtor(void* object) {
  CostGraphDef_Node_InputInfo* _this = reinterpret_cast< CostGraphDef_Node_InputInfo* >(object);
  (void)_this;
}
void CostGraphDef_Node_InputInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CostGraphDef_Node_InputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostGraphDef_Node_InputInfo::descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[0].descriptor;
}

const CostGraphDef_Node_InputInfo& CostGraphDef_Node_InputInfo::default_instance() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CostGraphDef_Node_InputInfo* CostGraphDef_Node_InputInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CostGraphDef_Node_InputInfo>(arena);
}

void CostGraphDef_Node_InputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CostGraphDef.Node.InputInfo)
  ::memset(&preceding_node_, 0, reinterpret_cast<char*>(&preceding_port_) -
    reinterpret_cast<char*>(&preceding_node_) + sizeof(preceding_port_));
}

bool CostGraphDef_Node_InputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CostGraphDef.Node.InputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 preceding_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &preceding_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 preceding_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &preceding_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CostGraphDef.Node.InputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CostGraphDef.Node.InputInfo)
  return false;
#undef DO_
}

void CostGraphDef_Node_InputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CostGraphDef.Node.InputInfo)
  // int32 preceding_node = 1;
  if (this->preceding_node() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->preceding_node(), output);
  }

  // int32 preceding_port = 2;
  if (this->preceding_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->preceding_port(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CostGraphDef.Node.InputInfo)
}

::google::protobuf::uint8* CostGraphDef_Node_InputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CostGraphDef.Node.InputInfo)
  // int32 preceding_node = 1;
  if (this->preceding_node() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->preceding_node(), target);
  }

  // int32 preceding_port = 2;
  if (this->preceding_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->preceding_port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CostGraphDef.Node.InputInfo)
  return target;
}

size_t CostGraphDef_Node_InputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CostGraphDef.Node.InputInfo)
  size_t total_size = 0;

  // int32 preceding_node = 1;
  if (this->preceding_node() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->preceding_node());
  }

  // int32 preceding_port = 2;
  if (this->preceding_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->preceding_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostGraphDef_Node_InputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CostGraphDef.Node.InputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CostGraphDef_Node_InputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostGraphDef_Node_InputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CostGraphDef.Node.InputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CostGraphDef.Node.InputInfo)
    MergeFrom(*source);
  }
}

void CostGraphDef_Node_InputInfo::MergeFrom(const CostGraphDef_Node_InputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CostGraphDef.Node.InputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.preceding_node() != 0) {
    set_preceding_node(from.preceding_node());
  }
  if (from.preceding_port() != 0) {
    set_preceding_port(from.preceding_port());
  }
}

void CostGraphDef_Node_InputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CostGraphDef.Node.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostGraphDef_Node_InputInfo::CopyFrom(const CostGraphDef_Node_InputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CostGraphDef.Node.InputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostGraphDef_Node_InputInfo::IsInitialized() const {
  return true;
}

void CostGraphDef_Node_InputInfo::Swap(CostGraphDef_Node_InputInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CostGraphDef_Node_InputInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CostGraphDef_Node_InputInfo::UnsafeArenaSwap(CostGraphDef_Node_InputInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CostGraphDef_Node_InputInfo::InternalSwap(CostGraphDef_Node_InputInfo* other) {
  std::swap(preceding_node_, other->preceding_node_);
  std::swap(preceding_port_, other->preceding_port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CostGraphDef_Node_InputInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CostGraphDef_Node_InputInfo

// int32 preceding_node = 1;
void CostGraphDef_Node_InputInfo::clear_preceding_node() {
  preceding_node_ = 0;
}
::google::protobuf::int32 CostGraphDef_Node_InputInfo::preceding_node() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.InputInfo.preceding_node)
  return preceding_node_;
}
void CostGraphDef_Node_InputInfo::set_preceding_node(::google::protobuf::int32 value) {
  
  preceding_node_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.InputInfo.preceding_node)
}

// int32 preceding_port = 2;
void CostGraphDef_Node_InputInfo::clear_preceding_port() {
  preceding_port_ = 0;
}
::google::protobuf::int32 CostGraphDef_Node_InputInfo::preceding_port() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.InputInfo.preceding_port)
  return preceding_port_;
}
void CostGraphDef_Node_InputInfo::set_preceding_port(::google::protobuf::int32 value) {
  
  preceding_port_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.InputInfo.preceding_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void CostGraphDef_Node_OutputInfo::_slow_mutable_shape() {
  shape_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
      GetArenaNoVirtual());
}
::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::_slow_release_shape() {
  if (shape_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::TensorShapeProto* temp = new ::tensorflow::TensorShapeProto(*shape_);
    shape_ = NULL;
    return temp;
  }
}
::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  
  ::tensorflow::TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void CostGraphDef_Node_OutputInfo::_slow_set_allocated_shape(
    ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** shape) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*shape) == NULL) {
      message_arena->Own(*shape);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*shape)) {
      ::tensorflow::TensorShapeProto* new_shape = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
            message_arena);
      new_shape->CopyFrom(**shape);
      *shape = new_shape;
    }
}
void CostGraphDef_Node_OutputInfo::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CostGraphDef.Node.OutputInfo.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostGraphDef_Node_OutputInfo::kSizeFieldNumber;
const int CostGraphDef_Node_OutputInfo::kAliasInputPortFieldNumber;
const int CostGraphDef_Node_OutputInfo::kShapeFieldNumber;
const int CostGraphDef_Node_OutputInfo::kDtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostGraphDef_Node_OutputInfo::CostGraphDef_Node_OutputInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CostGraphDef.Node.OutputInfo)
}
CostGraphDef_Node_OutputInfo::CostGraphDef_Node_OutputInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CostGraphDef.Node.OutputInfo)
}
CostGraphDef_Node_OutputInfo::CostGraphDef_Node_OutputInfo(const CostGraphDef_Node_OutputInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    shape_ = new ::tensorflow::TensorShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&size_, &from.size_,
    reinterpret_cast<char*>(&dtype_) -
    reinterpret_cast<char*>(&size_) + sizeof(dtype_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CostGraphDef.Node.OutputInfo)
}

void CostGraphDef_Node_OutputInfo::SharedCtor() {
  ::memset(&shape_, 0, reinterpret_cast<char*>(&dtype_) -
    reinterpret_cast<char*>(&shape_) + sizeof(dtype_));
  _cached_size_ = 0;
}

CostGraphDef_Node_OutputInfo::~CostGraphDef_Node_OutputInfo() {
  // @@protoc_insertion_point(destructor:tensorflow.CostGraphDef.Node.OutputInfo)
  SharedDtor();
}

void CostGraphDef_Node_OutputInfo::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete shape_;
  }
}

void CostGraphDef_Node_OutputInfo::ArenaDtor(void* object) {
  CostGraphDef_Node_OutputInfo* _this = reinterpret_cast< CostGraphDef_Node_OutputInfo* >(object);
  (void)_this;
}
void CostGraphDef_Node_OutputInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CostGraphDef_Node_OutputInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostGraphDef_Node_OutputInfo::descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[1].descriptor;
}

const CostGraphDef_Node_OutputInfo& CostGraphDef_Node_OutputInfo::default_instance() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CostGraphDef_Node_OutputInfo* CostGraphDef_Node_OutputInfo::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CostGraphDef_Node_OutputInfo>(arena);
}

void CostGraphDef_Node_OutputInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CostGraphDef.Node.OutputInfo)
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  ::memset(&size_, 0, reinterpret_cast<char*>(&dtype_) -
    reinterpret_cast<char*>(&size_) + sizeof(dtype_));
}

bool CostGraphDef_Node_OutputInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CostGraphDef.Node.OutputInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 alias_input_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &alias_input_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorShapeProto shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.DataType dtype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CostGraphDef.Node.OutputInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CostGraphDef.Node.OutputInfo)
  return false;
#undef DO_
}

void CostGraphDef_Node_OutputInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CostGraphDef.Node.OutputInfo)
  // int64 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->size(), output);
  }

  // int64 alias_input_port = 2;
  if (this->alias_input_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->alias_input_port(), output);
  }

  // .tensorflow.TensorShapeProto shape = 3;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->shape_, output);
  }

  // .tensorflow.DataType dtype = 4;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->dtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CostGraphDef.Node.OutputInfo)
}

::google::protobuf::uint8* CostGraphDef_Node_OutputInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CostGraphDef.Node.OutputInfo)
  // int64 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->size(), target);
  }

  // int64 alias_input_port = 2;
  if (this->alias_input_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->alias_input_port(), target);
  }

  // .tensorflow.TensorShapeProto shape = 3;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->shape_, false, target);
  }

  // .tensorflow.DataType dtype = 4;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->dtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CostGraphDef.Node.OutputInfo)
  return target;
}

size_t CostGraphDef_Node_OutputInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CostGraphDef.Node.OutputInfo)
  size_t total_size = 0;

  // .tensorflow.TensorShapeProto shape = 3;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shape_);
  }

  // int64 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // int64 alias_input_port = 2;
  if (this->alias_input_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->alias_input_port());
  }

  // .tensorflow.DataType dtype = 4;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostGraphDef_Node_OutputInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CostGraphDef.Node.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CostGraphDef_Node_OutputInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostGraphDef_Node_OutputInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CostGraphDef.Node.OutputInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CostGraphDef.Node.OutputInfo)
    MergeFrom(*source);
  }
}

void CostGraphDef_Node_OutputInfo::MergeFrom(const CostGraphDef_Node_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CostGraphDef.Node.OutputInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.alias_input_port() != 0) {
    set_alias_input_port(from.alias_input_port());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
}

void CostGraphDef_Node_OutputInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CostGraphDef.Node.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostGraphDef_Node_OutputInfo::CopyFrom(const CostGraphDef_Node_OutputInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CostGraphDef.Node.OutputInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostGraphDef_Node_OutputInfo::IsInitialized() const {
  return true;
}

void CostGraphDef_Node_OutputInfo::Swap(CostGraphDef_Node_OutputInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CostGraphDef_Node_OutputInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CostGraphDef_Node_OutputInfo::UnsafeArenaSwap(CostGraphDef_Node_OutputInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CostGraphDef_Node_OutputInfo::InternalSwap(CostGraphDef_Node_OutputInfo* other) {
  std::swap(shape_, other->shape_);
  std::swap(size_, other->size_);
  std::swap(alias_input_port_, other->alias_input_port_);
  std::swap(dtype_, other->dtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CostGraphDef_Node_OutputInfo::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CostGraphDef_Node_OutputInfo

// int64 size = 1;
void CostGraphDef_Node_OutputInfo::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node_OutputInfo::size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.size)
  return size_;
}
void CostGraphDef_Node_OutputInfo::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.size)
}

// int64 alias_input_port = 2;
void CostGraphDef_Node_OutputInfo::clear_alias_input_port() {
  alias_input_port_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node_OutputInfo::alias_input_port() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.alias_input_port)
  return alias_input_port_;
}
void CostGraphDef_Node_OutputInfo::set_alias_input_port(::google::protobuf::int64 value) {
  
  alias_input_port_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.alias_input_port)
}

// .tensorflow.TensorShapeProto shape = 3;
bool CostGraphDef_Node_OutputInfo::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
void CostGraphDef_Node_OutputInfo::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
const ::tensorflow::TensorShapeProto& CostGraphDef_Node_OutputInfo::shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  return shape_ != NULL ? *shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  return shape_;
}
::tensorflow::TensorShapeProto* CostGraphDef_Node_OutputInfo::release_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.OutputInfo.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
 void CostGraphDef_Node_OutputInfo::set_allocated_shape(::tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.OutputInfo.shape)
}

// .tensorflow.DataType dtype = 4;
void CostGraphDef_Node_OutputInfo::clear_dtype() {
  dtype_ = 0;
}
::tensorflow::DataType CostGraphDef_Node_OutputInfo::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.OutputInfo.dtype)
  return static_cast< ::tensorflow::DataType >(dtype_);
}
void CostGraphDef_Node_OutputInfo::set_dtype(::tensorflow::DataType value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.OutputInfo.dtype)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostGraphDef_Node::kNameFieldNumber;
const int CostGraphDef_Node::kDeviceFieldNumber;
const int CostGraphDef_Node::kIdFieldNumber;
const int CostGraphDef_Node::kInputInfoFieldNumber;
const int CostGraphDef_Node::kOutputInfoFieldNumber;
const int CostGraphDef_Node::kTemporaryMemorySizeFieldNumber;
const int CostGraphDef_Node::kHostTempMemorySizeFieldNumber;
const int CostGraphDef_Node::kDeviceTempMemorySizeFieldNumber;
const int CostGraphDef_Node::kHostPersistentMemorySizeFieldNumber;
const int CostGraphDef_Node::kDevicePersistentMemorySizeFieldNumber;
const int CostGraphDef_Node::kComputeCostFieldNumber;
const int CostGraphDef_Node::kComputeTimeFieldNumber;
const int CostGraphDef_Node::kMemoryTimeFieldNumber;
const int CostGraphDef_Node::kIsFinalFieldNumber;
const int CostGraphDef_Node::kControlInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostGraphDef_Node::CostGraphDef_Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CostGraphDef.Node)
}
CostGraphDef_Node::CostGraphDef_Node(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  input_info_(arena),
  output_info_(arena),
  control_input_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CostGraphDef.Node)
}
CostGraphDef_Node::CostGraphDef_Node(const CostGraphDef_Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      input_info_(from.input_info_),
      output_info_(from.output_info_),
      control_input_(from.control_input_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device(),
      GetArenaNoVirtual());
  }
  ::memcpy(&temporary_memory_size_, &from.temporary_memory_size_,
    reinterpret_cast<char*>(&memory_time_) -
    reinterpret_cast<char*>(&temporary_memory_size_) + sizeof(memory_time_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.CostGraphDef.Node)
}

void CostGraphDef_Node::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&temporary_memory_size_, 0, reinterpret_cast<char*>(&memory_time_) -
    reinterpret_cast<char*>(&temporary_memory_size_) + sizeof(memory_time_));
  _cached_size_ = 0;
}

CostGraphDef_Node::~CostGraphDef_Node() {
  // @@protoc_insertion_point(destructor:tensorflow.CostGraphDef.Node)
  SharedDtor();
}

void CostGraphDef_Node::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  device_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void CostGraphDef_Node::ArenaDtor(void* object) {
  CostGraphDef_Node* _this = reinterpret_cast< CostGraphDef_Node* >(object);
  (void)_this;
}
void CostGraphDef_Node::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CostGraphDef_Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostGraphDef_Node::descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[2].descriptor;
}

const CostGraphDef_Node& CostGraphDef_Node::default_instance() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CostGraphDef_Node* CostGraphDef_Node::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CostGraphDef_Node>(arena);
}

void CostGraphDef_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CostGraphDef.Node)
  input_info_.Clear();
  output_info_.Clear();
  control_input_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&temporary_memory_size_, 0, reinterpret_cast<char*>(&memory_time_) -
    reinterpret_cast<char*>(&temporary_memory_size_) + sizeof(memory_time_));
}

bool CostGraphDef_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CostGraphDef.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CostGraphDef.Node.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CostGraphDef.Node.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_output_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // int64 temporary_memory_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &temporary_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_final = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 control_input = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_control_input())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(64u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_control_input())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compute_cost = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compute_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 host_temp_memory_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &host_temp_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_temp_memory_size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_temp_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 host_persistent_memory_size = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &host_persistent_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 compute_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &compute_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 memory_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &memory_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 device_persistent_memory_size = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &device_persistent_memory_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CostGraphDef.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CostGraphDef.Node)
  return false;
#undef DO_
}

void CostGraphDef_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CostGraphDef.Node)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CostGraphDef.Node.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string device = 2;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CostGraphDef.Node.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device(), output);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  // repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
  for (unsigned int i = 0, n = this->input_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->input_info(i), output);
  }

  // repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
  for (unsigned int i = 0, n = this->output_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->output_info(i), output);
  }

  // int64 temporary_memory_size = 6;
  if (this->temporary_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->temporary_memory_size(), output);
  }

  // bool is_final = 7;
  if (this->is_final() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_final(), output);
  }

  // repeated int32 control_input = 8;
  if (this->control_input_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_control_input_cached_byte_size_);
  }
  for (int i = 0, n = this->control_input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->control_input(i), output);
  }

  // int64 compute_cost = 9;
  if (this->compute_cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->compute_cost(), output);
  }

  // int64 host_temp_memory_size = 10;
  if (this->host_temp_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->host_temp_memory_size(), output);
  }

  // int64 device_temp_memory_size = 11;
  if (this->device_temp_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->device_temp_memory_size(), output);
  }

  // int64 host_persistent_memory_size = 12;
  if (this->host_persistent_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->host_persistent_memory_size(), output);
  }

  // int64 compute_time = 14;
  if (this->compute_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->compute_time(), output);
  }

  // int64 memory_time = 15;
  if (this->memory_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->memory_time(), output);
  }

  // int64 device_persistent_memory_size = 16;
  if (this->device_persistent_memory_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->device_persistent_memory_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CostGraphDef.Node)
}

::google::protobuf::uint8* CostGraphDef_Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CostGraphDef.Node)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CostGraphDef.Node.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string device = 2;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CostGraphDef.Node.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device(), target);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  // repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
  for (unsigned int i = 0, n = this->input_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->input_info(i), false, target);
  }

  // repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
  for (unsigned int i = 0, n = this->output_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->output_info(i), false, target);
  }

  // int64 temporary_memory_size = 6;
  if (this->temporary_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->temporary_memory_size(), target);
  }

  // bool is_final = 7;
  if (this->is_final() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_final(), target);
  }

  // repeated int32 control_input = 8;
  if (this->control_input_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _control_input_cached_byte_size_, target);
  }
  for (int i = 0, n = this->control_input_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->control_input(i), target);
  }

  // int64 compute_cost = 9;
  if (this->compute_cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->compute_cost(), target);
  }

  // int64 host_temp_memory_size = 10;
  if (this->host_temp_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->host_temp_memory_size(), target);
  }

  // int64 device_temp_memory_size = 11;
  if (this->device_temp_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->device_temp_memory_size(), target);
  }

  // int64 host_persistent_memory_size = 12;
  if (this->host_persistent_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->host_persistent_memory_size(), target);
  }

  // int64 compute_time = 14;
  if (this->compute_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->compute_time(), target);
  }

  // int64 memory_time = 15;
  if (this->memory_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->memory_time(), target);
  }

  // int64 device_persistent_memory_size = 16;
  if (this->device_persistent_memory_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->device_persistent_memory_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CostGraphDef.Node)
  return target;
}

size_t CostGraphDef_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CostGraphDef.Node)
  size_t total_size = 0;

  // repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
  {
    unsigned int count = this->input_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_info(i));
    }
  }

  // repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
  {
    unsigned int count = this->output_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_info(i));
    }
  }

  // repeated int32 control_input = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->control_input_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _control_input_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string device = 2;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  // int64 temporary_memory_size = 6;
  if (this->temporary_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->temporary_memory_size());
  }

  // int64 host_temp_memory_size = 10;
  if (this->host_temp_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->host_temp_memory_size());
  }

  // int64 device_temp_memory_size = 11;
  if (this->device_temp_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_temp_memory_size());
  }

  // int32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool is_final = 7;
  if (this->is_final() != 0) {
    total_size += 1 + 1;
  }

  // int64 host_persistent_memory_size = 12;
  if (this->host_persistent_memory_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->host_persistent_memory_size());
  }

  // int64 device_persistent_memory_size = 16;
  if (this->device_persistent_memory_size() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->device_persistent_memory_size());
  }

  // int64 compute_cost = 9;
  if (this->compute_cost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compute_cost());
  }

  // int64 compute_time = 14;
  if (this->compute_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->compute_time());
  }

  // int64 memory_time = 15;
  if (this->memory_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->memory_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostGraphDef_Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CostGraphDef.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const CostGraphDef_Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostGraphDef_Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CostGraphDef.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CostGraphDef.Node)
    MergeFrom(*source);
  }
}

void CostGraphDef_Node::MergeFrom(const CostGraphDef_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CostGraphDef.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_info_.MergeFrom(from.input_info_);
  output_info_.MergeFrom(from.output_info_);
  control_input_.MergeFrom(from.control_input_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.device().size() > 0) {
    set_device(from.device());
  }
  if (from.temporary_memory_size() != 0) {
    set_temporary_memory_size(from.temporary_memory_size());
  }
  if (from.host_temp_memory_size() != 0) {
    set_host_temp_memory_size(from.host_temp_memory_size());
  }
  if (from.device_temp_memory_size() != 0) {
    set_device_temp_memory_size(from.device_temp_memory_size());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.is_final() != 0) {
    set_is_final(from.is_final());
  }
  if (from.host_persistent_memory_size() != 0) {
    set_host_persistent_memory_size(from.host_persistent_memory_size());
  }
  if (from.device_persistent_memory_size() != 0) {
    set_device_persistent_memory_size(from.device_persistent_memory_size());
  }
  if (from.compute_cost() != 0) {
    set_compute_cost(from.compute_cost());
  }
  if (from.compute_time() != 0) {
    set_compute_time(from.compute_time());
  }
  if (from.memory_time() != 0) {
    set_memory_time(from.memory_time());
  }
}

void CostGraphDef_Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CostGraphDef.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostGraphDef_Node::CopyFrom(const CostGraphDef_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CostGraphDef.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostGraphDef_Node::IsInitialized() const {
  return true;
}

void CostGraphDef_Node::Swap(CostGraphDef_Node* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CostGraphDef_Node* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CostGraphDef_Node::UnsafeArenaSwap(CostGraphDef_Node* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CostGraphDef_Node::InternalSwap(CostGraphDef_Node* other) {
  input_info_.UnsafeArenaSwap(&other->input_info_);
  output_info_.UnsafeArenaSwap(&other->output_info_);
  control_input_.UnsafeArenaSwap(&other->control_input_);
  name_.Swap(&other->name_);
  device_.Swap(&other->device_);
  std::swap(temporary_memory_size_, other->temporary_memory_size_);
  std::swap(host_temp_memory_size_, other->host_temp_memory_size_);
  std::swap(device_temp_memory_size_, other->device_temp_memory_size_);
  std::swap(id_, other->id_);
  std::swap(is_final_, other->is_final_);
  std::swap(host_persistent_memory_size_, other->host_persistent_memory_size_);
  std::swap(device_persistent_memory_size_, other->device_persistent_memory_size_);
  std::swap(compute_cost_, other->compute_cost_);
  std::swap(compute_time_, other->compute_time_);
  std::swap(memory_time_, other->memory_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CostGraphDef_Node::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CostGraphDef_Node

// string name = 1;
void CostGraphDef_Node::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CostGraphDef_Node::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.name)
  return name_.Get();
}
void CostGraphDef_Node::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.name)
}
void CostGraphDef_Node::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CostGraphDef.Node.name)
}
void CostGraphDef_Node::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CostGraphDef.Node.name)
}
::std::string* CostGraphDef_Node::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CostGraphDef_Node::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CostGraphDef_Node::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CostGraphDef.Node.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CostGraphDef_Node::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.name)
}
void CostGraphDef_Node::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CostGraphDef.Node.name)
}

// string device = 2;
void CostGraphDef_Node::clear_device() {
  device_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CostGraphDef_Node::device() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device)
  return device_.Get();
}
void CostGraphDef_Node::set_device(const ::std::string& value) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device)
}
void CostGraphDef_Node::set_device(const char* value) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CostGraphDef.Node.device)
}
void CostGraphDef_Node::set_device(const char* value,
    size_t size) {
  
  device_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CostGraphDef.Node.device)
}
::std::string* CostGraphDef_Node::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.device)
  return device_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CostGraphDef_Node::release_device() {
  // @@protoc_insertion_point(field_release:tensorflow.CostGraphDef.Node.device)
  
  return device_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CostGraphDef_Node::unsafe_arena_release_device() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CostGraphDef.Node.device)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return device_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CostGraphDef_Node::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CostGraphDef.Node.device)
}
void CostGraphDef_Node::unsafe_arena_set_allocated_device(
    ::std::string* device) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (device != NULL) {
    
  } else {
    
  }
  device_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      device, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CostGraphDef.Node.device)
}

// int32 id = 3;
void CostGraphDef_Node::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 CostGraphDef_Node::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.id)
  return id_;
}
void CostGraphDef_Node::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.id)
}

// repeated .tensorflow.CostGraphDef.Node.InputInfo input_info = 4;
int CostGraphDef_Node::input_info_size() const {
  return input_info_.size();
}
void CostGraphDef_Node::clear_input_info() {
  input_info_.Clear();
}
const ::tensorflow::CostGraphDef_Node_InputInfo& CostGraphDef_Node::input_info(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.input_info)
  return input_info_.Get(index);
}
::tensorflow::CostGraphDef_Node_InputInfo* CostGraphDef_Node::mutable_input_info(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.input_info)
  return input_info_.Mutable(index);
}
::tensorflow::CostGraphDef_Node_InputInfo* CostGraphDef_Node::add_input_info() {
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.input_info)
  return input_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_InputInfo >*
CostGraphDef_Node::mutable_input_info() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.input_info)
  return &input_info_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_InputInfo >&
CostGraphDef_Node::input_info() const {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.input_info)
  return input_info_;
}

// repeated .tensorflow.CostGraphDef.Node.OutputInfo output_info = 5;
int CostGraphDef_Node::output_info_size() const {
  return output_info_.size();
}
void CostGraphDef_Node::clear_output_info() {
  output_info_.Clear();
}
const ::tensorflow::CostGraphDef_Node_OutputInfo& CostGraphDef_Node::output_info(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.output_info)
  return output_info_.Get(index);
}
::tensorflow::CostGraphDef_Node_OutputInfo* CostGraphDef_Node::mutable_output_info(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.Node.output_info)
  return output_info_.Mutable(index);
}
::tensorflow::CostGraphDef_Node_OutputInfo* CostGraphDef_Node::add_output_info() {
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.output_info)
  return output_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_OutputInfo >*
CostGraphDef_Node::mutable_output_info() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.output_info)
  return &output_info_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node_OutputInfo >&
CostGraphDef_Node::output_info() const {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.output_info)
  return output_info_;
}

// int64 temporary_memory_size = 6;
void CostGraphDef_Node::clear_temporary_memory_size() {
  temporary_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::temporary_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.temporary_memory_size)
  return temporary_memory_size_;
}
void CostGraphDef_Node::set_temporary_memory_size(::google::protobuf::int64 value) {
  
  temporary_memory_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.temporary_memory_size)
}

// int64 host_temp_memory_size = 10;
void CostGraphDef_Node::clear_host_temp_memory_size() {
  host_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::host_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.host_temp_memory_size)
  return host_temp_memory_size_;
}
void CostGraphDef_Node::set_host_temp_memory_size(::google::protobuf::int64 value) {
  
  host_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.host_temp_memory_size)
}

// int64 device_temp_memory_size = 11;
void CostGraphDef_Node::clear_device_temp_memory_size() {
  device_temp_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::device_temp_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device_temp_memory_size)
  return device_temp_memory_size_;
}
void CostGraphDef_Node::set_device_temp_memory_size(::google::protobuf::int64 value) {
  
  device_temp_memory_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device_temp_memory_size)
}

// int64 host_persistent_memory_size = 12;
void CostGraphDef_Node::clear_host_persistent_memory_size() {
  host_persistent_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::host_persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.host_persistent_memory_size)
  return host_persistent_memory_size_;
}
void CostGraphDef_Node::set_host_persistent_memory_size(::google::protobuf::int64 value) {
  
  host_persistent_memory_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.host_persistent_memory_size)
}

// int64 device_persistent_memory_size = 16;
void CostGraphDef_Node::clear_device_persistent_memory_size() {
  device_persistent_memory_size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::device_persistent_memory_size() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.device_persistent_memory_size)
  return device_persistent_memory_size_;
}
void CostGraphDef_Node::set_device_persistent_memory_size(::google::protobuf::int64 value) {
  
  device_persistent_memory_size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.device_persistent_memory_size)
}

// int64 compute_cost = 9;
void CostGraphDef_Node::clear_compute_cost() {
  compute_cost_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::compute_cost() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.compute_cost)
  return compute_cost_;
}
void CostGraphDef_Node::set_compute_cost(::google::protobuf::int64 value) {
  
  compute_cost_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.compute_cost)
}

// int64 compute_time = 14;
void CostGraphDef_Node::clear_compute_time() {
  compute_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::compute_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.compute_time)
  return compute_time_;
}
void CostGraphDef_Node::set_compute_time(::google::protobuf::int64 value) {
  
  compute_time_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.compute_time)
}

// int64 memory_time = 15;
void CostGraphDef_Node::clear_memory_time() {
  memory_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CostGraphDef_Node::memory_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.memory_time)
  return memory_time_;
}
void CostGraphDef_Node::set_memory_time(::google::protobuf::int64 value) {
  
  memory_time_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.memory_time)
}

// bool is_final = 7;
void CostGraphDef_Node::clear_is_final() {
  is_final_ = false;
}
bool CostGraphDef_Node::is_final() const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.is_final)
  return is_final_;
}
void CostGraphDef_Node::set_is_final(bool value) {
  
  is_final_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.is_final)
}

// repeated int32 control_input = 8;
int CostGraphDef_Node::control_input_size() const {
  return control_input_.size();
}
void CostGraphDef_Node::clear_control_input() {
  control_input_.Clear();
}
::google::protobuf::int32 CostGraphDef_Node::control_input(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.Node.control_input)
  return control_input_.Get(index);
}
void CostGraphDef_Node::set_control_input(int index, ::google::protobuf::int32 value) {
  control_input_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CostGraphDef.Node.control_input)
}
void CostGraphDef_Node::add_control_input(::google::protobuf::int32 value) {
  control_input_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.Node.control_input)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CostGraphDef_Node::control_input() const {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.Node.control_input)
  return control_input_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CostGraphDef_Node::mutable_control_input() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.Node.control_input)
  return &control_input_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostGraphDef::kNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostGraphDef::CostGraphDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CostGraphDef)
}
CostGraphDef::CostGraphDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  node_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CostGraphDef)
}
CostGraphDef::CostGraphDef(const CostGraphDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      node_(from.node_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.CostGraphDef)
}

void CostGraphDef::SharedCtor() {
  _cached_size_ = 0;
}

CostGraphDef::~CostGraphDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CostGraphDef)
  SharedDtor();
}

void CostGraphDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void CostGraphDef::ArenaDtor(void* object) {
  CostGraphDef* _this = reinterpret_cast< CostGraphDef* >(object);
  (void)_this;
}
void CostGraphDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CostGraphDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostGraphDef::descriptor() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[3].descriptor;
}

const CostGraphDef& CostGraphDef::default_instance() {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults();
  return *internal_default_instance();
}

CostGraphDef* CostGraphDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CostGraphDef>(arena);
}

void CostGraphDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CostGraphDef)
  node_.Clear();
}

bool CostGraphDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CostGraphDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.CostGraphDef.Node node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CostGraphDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CostGraphDef)
  return false;
#undef DO_
}

void CostGraphDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CostGraphDef)
  // repeated .tensorflow.CostGraphDef.Node node = 1;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CostGraphDef)
}

::google::protobuf::uint8* CostGraphDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CostGraphDef)
  // repeated .tensorflow.CostGraphDef.Node node = 1;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->node(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CostGraphDef)
  return target;
}

size_t CostGraphDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CostGraphDef)
  size_t total_size = 0;

  // repeated .tensorflow.CostGraphDef.Node node = 1;
  {
    unsigned int count = this->node_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostGraphDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CostGraphDef)
  GOOGLE_DCHECK_NE(&from, this);
  const CostGraphDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostGraphDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CostGraphDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CostGraphDef)
    MergeFrom(*source);
  }
}

void CostGraphDef::MergeFrom(const CostGraphDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CostGraphDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_.MergeFrom(from.node_);
}

void CostGraphDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CostGraphDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostGraphDef::CopyFrom(const CostGraphDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CostGraphDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostGraphDef::IsInitialized() const {
  return true;
}

void CostGraphDef::Swap(CostGraphDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CostGraphDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CostGraphDef::UnsafeArenaSwap(CostGraphDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CostGraphDef::InternalSwap(CostGraphDef* other) {
  node_.UnsafeArenaSwap(&other->node_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CostGraphDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CostGraphDef

// repeated .tensorflow.CostGraphDef.Node node = 1;
int CostGraphDef::node_size() const {
  return node_.size();
}
void CostGraphDef::clear_node() {
  node_.Clear();
}
const ::tensorflow::CostGraphDef_Node& CostGraphDef::node(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CostGraphDef.node)
  return node_.Get(index);
}
::tensorflow::CostGraphDef_Node* CostGraphDef::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.CostGraphDef.node)
  return node_.Mutable(index);
}
::tensorflow::CostGraphDef_Node* CostGraphDef::add_node() {
  // @@protoc_insertion_point(field_add:tensorflow.CostGraphDef.node)
  return node_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node >*
CostGraphDef::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CostGraphDef.node)
  return &node_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::CostGraphDef_Node >&
CostGraphDef::node() const {
  // @@protoc_insertion_point(field_list:tensorflow.CostGraphDef.node)
  return node_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
